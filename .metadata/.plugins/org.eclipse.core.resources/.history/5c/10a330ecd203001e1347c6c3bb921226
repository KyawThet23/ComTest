package com.mit.first.controller;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mit.first.payload.IdProductDto;
import com.mit.first.payload.NewOrderItem;
import com.mit.first.payload.OrderResponse;
import com.mit.first.payload.PlaceOrder;
import com.mit.first.service.OrderService;

import jakarta.persistence.EntityManager;
import jakarta.persistence.Query;


@RestController
@RequestMapping("/order")
public class OrderController {	
	
	@Autowired
	private OrderService service;
	@Autowired
	private EntityManager entityManager;

	@PostMapping("/create")
	public String createOrder(@RequestBody PlaceOrder request) {
		
		service.placeOrder(request);
		
		return "Order create successfully";
	}
	 
	
	@GetMapping("/all")
	public List<OrderResponse> getAllOrder(){
		
		return service.getAll();
	}
	
	
	@GetMapping("/products/{id}")
	public List<IdProductDto> getProductByOrderid(@PathVariable int id){
		
		return service.getAllProductsById(id);
	}
	
	@GetMapping("/date/{date}")
	public List<OrderResponse> findByDate (@PathVariable LocalDate date) {
		
		String script = "SELECT concat(c.firstName, ' ', c.lastName), o FROM Customer c "
				+ "JOIN Order o ON c.id = o.customer.id "
				+ "WHERE o.orderDate = :date";
		
		Query query = entityManager.createQuery(script);
		query.setParameter("date", date);
		
		@SuppressWarnings("unchecked")
		List<OrderResponse> result = query.getResultList();
		
		return result;
	}
	
	@GetMapping("/code/{code}")
	public List<OrderResponse> findByCode (@PathVariable String code){
		
		String script = "SELECT concat(c.firstName, ' ', c.lastName), o FROM Order o "
				+ "JOIN Customer c ON o.customer.id = c.id "
				+ "WHERE o.code = :code";
		
		Query query = entityManager.createQuery(script);
		query.setParameter("code", code);
		@SuppressWarnings("unchecked")
		List<OrderResponse> result = query.getResultList();
		
		return result;
	}
	
	@PutMapping("/add/{id}")
	public void addNewItem(@PathVariable int id,
						   @RequestBody NewOrderItem item) {
		
		service.addOrderedItem(id,item);
		
	}
	
	@DeleteMapping("/delete/{id}")
	public void deleteById (@PathVariable int id) {
		
		service.deleteById(id);
	}
	
	@DeleteMapping("/item/{orderId}/{itemId}/{subtotal}")
	public void deleteOrderItem(@PathVariable float subtotal,
								@PathVariable int itemId,
								@PathVariable int orderId) {
		
		service.deleteOrderedItem(orderId,itemId,subtotal);
	}
	
}
